

# SMS Spam Detector

## Description

The SMS Spam Detector is a machine learning project that classifies SMS messages as spam or ham (not spam) using a Naive Bayes classifier. It utilizes natural language processing techniques to preprocess the data and extract features from the text.

## Table of Contents

1. [Installation](#installation)
2. [Usage](#usage)
3. [Data](#data)
4. [Model Training](#model-training)
5. [Evaluation](#evaluation)
6. [License](#license)

## Installation

To run this project, you need to have Python installed along with the following libraries:

```bash
pip install pandas scikit-learn nltk joblib
```

You will also need to download the NLTK stopwords:

```python
import nltk
nltk.download('stopwords')
```

## Usage

1. Load your dataset in CSV format (ensure it has columns for 'label' and 'text').
2. Run the script to train the model and evaluate its performance.
3. Use the trained model to predict if new messages are spam or not.

```bash
python spam_detector.py
```

## Data

The dataset used for training the model is in CSV format and contains two columns:
- `label`: Indicates whether the message is "spam" or "ham."
- `text`: The content of the SMS message.

## Model Training

The model is trained using the following steps:

1. **Data Loading**: The dataset is loaded and relevant columns are selected.
2. **Preprocessing**: The text is cleaned by converting it to lowercase and removing stopwords.
3. **Feature Extraction**: Text data is transformed into numerical features using the Bag of Words model via `CountVectorizer`.
4. **Model Training**: A Multinomial Naive Bayes classifier is trained on the data.

## Evaluation

The model's performance is evaluated using accuracy and a detailed classification report. The accuracy is printed to the console after the predictions are made.

